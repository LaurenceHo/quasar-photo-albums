service: photo-album-api
provider:
  name: aws
  runtime: nodejs20.x
  stage: dev
  region: ${env:AWS_REGION_NAME}
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:DescribeTable
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:PHOTO_ALBUMS_TABLE_NAME}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:PHOTO_ALBUM_TAGS_TABLE_NAME}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${env:PHOTO_USER_PERMISSION_TABLE_NAME}
        - Effect: Allow
          Action:
            - s3:ListBucket
            - s3:GetObject
            - s3:PutObject
            - s3:DeleteObject
          Resource:
            - arn:aws:s3:::${env:AWS_S3_BUCKET_NAME}
            - arn:aws:s3:::${env:AWS_S3_BUCKET_NAME}/*

plugins:
  - serverless-plugin-typescript
  - serverless-dotenv-plugin
  - ./src/serverless-plugins/get-dynamodb-stream-arn.cjs

useDotenv: true

functions:
  app:
    handler: src/app.handler
    events:
      - http: ANY /
      - http: ANY /{proxy+}
    environment:
      AWS_REGION_NAME: ${self:provider.region}
      GOOGLE_PLACES_API_KEY: ${env:GOOGLE_PLACES_API_KEY}
      GOOGLE_CLIENT_ID: ${env:GOOGLE_CLIENT_ID}
      ALBUM_URL: ${env:ALBUM_URL}
      IMAGEKIT_CDN_URL: ${env:IMAGEKIT_CDN_URL}
      AWS_S3_BUCKET_NAME: ${env:AWS_S3_BUCKET_NAME}
      PHOTO_ALBUMS_TABLE_NAME: ${env:PHOTO_ALBUMS_TABLE_NAME}
      PHOTO_ALBUM_TAGS_TABLE_NAME: ${env:PHOTO_ALBUM_TAGS_TABLE_NAME}
      PHOTO_USER_PERMISSION_TABLE_NAME: ${env:PHOTO_USER_PERMISSION_TABLE_NAME}
      DATA_AGGREGATIONS_TABLE_NAME: ${env:DATA_AGGREGATIONS_TABLE_NAME}
      JWT_SECRET: ${env:JWT_SECRET}
  aggregations:
    handler: src/aggregations/locations.handler
    events:
      - stream:
          arn: ${fetchStreamARN(${env:PHOTO_ALBUMS_TABLE_NAME})}
          startingPosition: LATEST
          enabled: true

resources:
  Resources:
    AggregationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:DATA_AGGREGATIONS_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1

custom:
  dotenv:
    exclude:
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
